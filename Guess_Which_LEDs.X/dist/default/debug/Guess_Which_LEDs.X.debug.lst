

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Nov 09 08:11:30 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15  0000                     
    16                           ; Version 2.05
    17                           ; Generated 20/12/2018 GMT
    18                           ; 
    19                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F46K42 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	nvCOMRAM
    52  000027                     __pnvCOMRAM:
    53                           	opt callstack 0
    54  000027                     _seed:
    55                           	opt callstack 0
    56  000027                     	ds	8
    57  0000                     _ANSELB	set	14928
    58  0000                     _PORTB	set	16331
    59  0000                     _TRISB	set	16323
    60                           
    61                           ; #config settings
    62  0000                     
    63                           	psect	cinit
    64  00FD2A                     __pcinit:
    65                           	opt callstack 0
    66  00FD2A                     start_initialization:
    67                           	opt callstack 0
    68  00FD2A                     __initialization:
    69                           	opt callstack 0
    70  00FD2A                     end_of_initialization:
    71                           	opt callstack 0
    72  00FD2A                     __end_of__initialization:
    73                           	opt callstack 0
    74  00FD2A  0100               	movlb	0
    75  00FD2C  EFB3  F07E         	goto	_main	;jump to C main() function
    76                           
    77                           	psect	cstackCOMRAM
    78  000001                     __pcstackCOMRAM:
    79                           	opt callstack 0
    80  000001                     ?___awdiv:
    81                           	opt callstack 0
    82  000001                     ?___omul:
    83                           	opt callstack 0
    84  000001                     ___awdiv@dividend:
    85                           	opt callstack 0
    86  000001                     srand@s:
    87                           	opt callstack 0
    88  000001                     ___omul@multiplier:
    89                           	opt callstack 0
    90                           
    91                           ; 8 bytes @ 0x0
    92  000001                     	ds	2
    93  000003                     ??_srand:
    94  000003                     ___awdiv@divisor:
    95                           	opt callstack 0
    96                           
    97                           ; 2 bytes @ 0x2
    98  000003                     	ds	2
    99  000005                     ___awdiv@counter:
   100                           	opt callstack 0
   101                           
   102                           ; 1 bytes @ 0x4
   103  000005                     	ds	1
   104  000006                     ___awdiv@sign:
   105                           	opt callstack 0
   106                           
   107                           ; 1 bytes @ 0x5
   108  000006                     	ds	1
   109  000007                     ___awdiv@quotient:
   110                           	opt callstack 0
   111                           
   112                           ; 2 bytes @ 0x6
   113  000007                     	ds	2
   114  000009                     ___omul@multiplicand:
   115                           	opt callstack 0
   116                           
   117                           ; 8 bytes @ 0x8
   118  000009                     	ds	8
   119  000011                     ___omul@product:
   120                           	opt callstack 0
   121                           
   122                           ; 8 bytes @ 0x10
   123  000011                     	ds	8
   124  000019                     ?_rand:
   125                           	opt callstack 0
   126                           
   127                           ; 2 bytes @ 0x18
   128  000019                     	ds	2
   129  00001B                     ??_rand:
   130                           
   131                           ; 1 bytes @ 0x1A
   132  00001B                     	ds	8
   133  000023                     ??_main:
   134                           
   135                           ; 1 bytes @ 0x22
   136  000023                     	ds	2
   137  000025                     main@rand_num:
   138                           	opt callstack 0
   139                           
   140                           ; 2 bytes @ 0x24
   141  000025                     	ds	2
   142                           
   143 ;;
   144 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   145 ;;
   146 ;; *************** function _main *****************
   147 ;; Defined at:
   148 ;;		line 21 in file "Guess_Which_LEDs.c"
   149 ;; Parameters:    Size  Location     Type
   150 ;;		None
   151 ;; Auto vars:     Size  Location     Type
   152 ;;  rand_num        2   36[COMRAM] int 
   153 ;; Return value:  Size  Location     Type
   154 ;;                  1    wreg      void 
   155 ;; Registers used:
   156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   157 ;; Tracked objects:
   158 ;;		On entry : 0/0
   159 ;;		On exit  : 0/0
   160 ;;		Unchanged: 0/0
   161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   165 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   166 ;;Total ram usage:        4 bytes
   167 ;; Hardware stack levels required when called:    2
   168 ;; This function calls:
   169 ;;		___awdiv
   170 ;;		_rand
   171 ;;		_srand
   172 ;; This function is called by:
   173 ;;		Startup code after reset
   174 ;; This function uses a non-reentrant model
   175 ;;
   176                           
   177                           	psect	text0
   178  00FD66                     __ptext0:
   179                           	opt callstack 0
   180  00FD66                     _main:
   181                           	opt callstack 29
   182                           
   183                           ;Guess_Which_LEDs.c: 22:     int rand_num;;Guess_Which_LEDs.c: 24:     ANSELB = 0xF0;
   184                           
   185                           ;incstack = 0
   186  00FD66  0EF0               	movlw	240
   187  00FD68  013A               	movlb	58	; () banked
   188  00FD6A  6F50               	movwf	80,b	;volatile
   189                           
   190                           ;Guess_Which_LEDs.c: 25:     TRISB = 0xF0;
   191  00FD6C  0EF0               	movlw	240
   192  00FD6E  6EC3               	movwf	16323,c	;volatile
   193                           
   194                           ; BSR set to: 58
   195                           ;Guess_Which_LEDs.c: 27:     srand(10);
   196  00FD70  0E00               	movlw	0
   197  00FD72  6E02               	movwf	srand@s+1,c
   198  00FD74  0E0A               	movlw	10
   199  00FD76  6E01               	movwf	srand@s,c
   200  00FD78  EC98  F07E         	call	_srand	;wreg free
   201  00FD7C                     l844:
   202                           
   203                           ;Guess_Which_LEDs.c: 30:     {;Guess_Which_LEDs.c: 32:         rand_num = rand();
   204  00FD7C  EC78  F07F         	call	_rand	;wreg free
   205  00FD80  0060  F064  F025   	movff	?_rand,main@rand_num
   206  00FD86  0060  F068  F026   	movff	?_rand+1,main@rand_num+1
   207                           
   208                           ;Guess_Which_LEDs.c: 33:         rand_num = rand_num/2048;
   209  00FD8C  0060  F094  F001   	movff	main@rand_num,___awdiv@dividend
   210  00FD92  0060  F098  F002   	movff	main@rand_num+1,___awdiv@dividend+1
   211  00FD98  0E08               	movlw	8
   212  00FD9A  6E04               	movwf	___awdiv@divisor+1,c
   213  00FD9C  0E00               	movlw	0
   214  00FD9E  6E03               	movwf	___awdiv@divisor,c
   215  00FDA0  ECE7  F07E         	call	___awdiv	;wreg free
   216  00FDA4  0060  F004  F025   	movff	?___awdiv,main@rand_num
   217  00FDAA  0060  F008  F026   	movff	?___awdiv+1,main@rand_num+1
   218                           
   219                           ;Guess_Which_LEDs.c: 34:         PORTB = rand_num;
   220  00FDB0  0060  F097  FFCB   	movff	main@rand_num,16331	;volatile
   221                           
   222                           ;Guess_Which_LEDs.c: 35:         _delay((unsigned long)((6000)*(8000000/4000.0)));
   223  00FDB6  0E3D               	movlw	61
   224  00FDB8  6E24               	movwf	(??_main+1)& (0+255),c
   225  00FDBA  0EE1               	movlw	225
   226  00FDBC  6E23               	movwf	??_main& (0+255),c
   227  00FDBE  0E40               	movlw	64
   228  00FDC0                     u217:
   229  00FDC0  2EE8               	decfsz	wreg,f,c
   230  00FDC2  D7FE               	bra	u217
   231  00FDC4  2E23               	decfsz	??_main& (0+255),f,c
   232  00FDC6  D7FC               	bra	u217
   233  00FDC8  2E24               	decfsz	(??_main+1)& (0+255),f,c
   234  00FDCA  D7FA               	bra	u217
   235  00FDCC  D7D7               	goto	l844
   236  00FDCE                     __end_of_main:
   237                           	opt callstack 0
   238                           
   239 ;; *************** function _srand *****************
   240 ;; Defined at:
   241 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\rand.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;  s               2    0[COMRAM] unsigned int 
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   255 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   257 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   258 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   259 ;;Total ram usage:        6 bytes
   260 ;; Hardware stack levels used:    1
   261 ;; This function calls:
   262 ;;		Nothing
   263 ;; This function is called by:
   264 ;;		_main
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           	psect	text1
   269  00FD30                     __ptext1:
   270                           	opt callstack 0
   271  00FD30                     _srand:
   272                           	opt callstack 30
   273                           
   274                           ;incstack = 0
   275  00FD30  0EFF               	movlw	255
   276  00FD32  6E03               	movwf	??_srand& (0+255),c
   277  00FD34  0EFF               	movlw	255
   278  00FD36  6E04               	movwf	(??_srand+1)& (0+255),c
   279  00FD38  0060  F004  F005   	movff	srand@s,??_srand+2
   280  00FD3E  0060  F008  F006   	movff	srand@s+1,??_srand+3
   281  00FD44  5003               	movf	??_srand,w,c
   282  00FD46  2605               	addwf	??_srand+2,f,c
   283  00FD48  5004               	movf	??_srand+1,w,c
   284  00FD4A  2206               	addwfc	??_srand+3,f,c
   285  00FD4C  0060  F014  F027   	movff	??_srand+2,_seed
   286  00FD52  0060  F018  F028   	movff	??_srand+3,_seed+1
   287  00FD58  6A29               	clrf	_seed+2,c
   288  00FD5A  6A2A               	clrf	_seed+3,c
   289  00FD5C  6A2B               	clrf	_seed+4,c
   290  00FD5E  6A2C               	clrf	_seed+5,c
   291  00FD60  6A2D               	clrf	_seed+6,c
   292  00FD62  6A2E               	clrf	_seed+7,c
   293  00FD64  0012               	return		;funcret
   294  00FD66                     __end_of_srand:
   295                           	opt callstack 0
   296                           
   297 ;; *************** function _rand *****************
   298 ;; Defined at:
   299 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\rand.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  2   24[COMRAM] int 
   306 ;; Registers used:
   307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   315 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;Total ram usage:       10 bytes
   318 ;; Hardware stack levels used:    1
   319 ;; Hardware stack levels required when called:    1
   320 ;; This function calls:
   321 ;;		___omul
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text2
   328  00FEF0                     __ptext2:
   329                           	opt callstack 0
   330  00FEF0                     _rand:
   331                           	opt callstack 29
   332                           
   333                           ;incstack = 0
   334  00FEF0  0060  F09C  F001   	movff	_seed,___omul@multiplier
   335  00FEF6  0060  F0A0  F002   	movff	_seed+1,___omul@multiplier+1
   336  00FEFC  0060  F0A4  F003   	movff	_seed+2,___omul@multiplier+2
   337  00FF02  0060  F0A8  F004   	movff	_seed+3,___omul@multiplier+3
   338  00FF08  0060  F0AC  F005   	movff	_seed+4,___omul@multiplier+4
   339  00FF0E  0060  F0B0  F006   	movff	_seed+5,___omul@multiplier+5
   340  00FF14  0060  F0B4  F007   	movff	_seed+6,___omul@multiplier+6
   341  00FF1A  0060  F0B8  F008   	movff	_seed+7,___omul@multiplier+7
   342  00FF20  0E2D               	movlw	45
   343  00FF22  6E09               	movwf	___omul@multiplicand,c
   344  00FF24  0E7F               	movlw	127
   345  00FF26  6E0A               	movwf	___omul@multiplicand+1,c
   346  00FF28  0E95               	movlw	149
   347  00FF2A  6E0B               	movwf	___omul@multiplicand+2,c
   348  00FF2C  0E4C               	movlw	76
   349  00FF2E  6E0C               	movwf	___omul@multiplicand+3,c
   350  00FF30  0E2D               	movlw	45
   351  00FF32  6E0D               	movwf	___omul@multiplicand+4,c
   352  00FF34  0EF4               	movlw	244
   353  00FF36  6E0E               	movwf	___omul@multiplicand+5,c
   354  00FF38  0E51               	movlw	81
   355  00FF3A  6E0F               	movwf	___omul@multiplicand+6,c
   356  00FF3C  0E58               	movlw	88
   357  00FF3E  6E10               	movwf	___omul@multiplicand+7,c
   358  00FF40  EC2B  F07F         	call	___omul	;wreg free
   359  00FF44  0060  F004  F01B   	movff	?___omul,??_rand
   360  00FF4A  0060  F008  F01C   	movff	?___omul+1,??_rand+1
   361  00FF50  0060  F00C  F01D   	movff	?___omul+2,??_rand+2
   362  00FF56  0060  F010  F01E   	movff	?___omul+3,??_rand+3
   363  00FF5C  0060  F014  F01F   	movff	?___omul+4,??_rand+4
   364  00FF62  0060  F018  F020   	movff	?___omul+5,??_rand+5
   365  00FF68  0060  F01C  F021   	movff	?___omul+6,??_rand+6
   366  00FF6E  0060  F020  F022   	movff	?___omul+7,??_rand+7
   367  00FF74  0E01               	movlw	1
   368  00FF76  241B               	addwf	??_rand,w,c
   369  00FF78  6E27               	movwf	_seed,c
   370  00FF7A  0E00               	movlw	0
   371  00FF7C  201C               	addwfc	??_rand+1,w,c
   372  00FF7E  6E28               	movwf	_seed+1,c
   373  00FF80  0E00               	movlw	0
   374  00FF82  201D               	addwfc	??_rand+2,w,c
   375  00FF84  6E29               	movwf	_seed+2,c
   376  00FF86  0E00               	movlw	0
   377  00FF88  201E               	addwfc	??_rand+3,w,c
   378  00FF8A  6E2A               	movwf	_seed+3,c
   379  00FF8C  0E00               	movlw	0
   380  00FF8E  201F               	addwfc	??_rand+4,w,c
   381  00FF90  6E2B               	movwf	_seed+4,c
   382  00FF92  0E00               	movlw	0
   383  00FF94  2020               	addwfc	??_rand+5,w,c
   384  00FF96  6E2C               	movwf	_seed+5,c
   385  00FF98  0E00               	movlw	0
   386  00FF9A  2021               	addwfc	??_rand+6,w,c
   387  00FF9C  6E2D               	movwf	_seed+6,c
   388  00FF9E  0E00               	movlw	0
   389  00FFA0  2022               	addwfc	??_rand+7,w,c
   390  00FFA2  6E2E               	movwf	_seed+7,c
   391  00FFA4  0060  F09C  F01B   	movff	_seed,??_rand
   392  00FFAA  0060  F0A0  F01C   	movff	_seed+1,??_rand+1
   393  00FFB0  0060  F0A4  F01D   	movff	_seed+2,??_rand+2
   394  00FFB6  0060  F0A8  F01E   	movff	_seed+3,??_rand+3
   395  00FFBC  0060  F0AC  F01F   	movff	_seed+4,??_rand+4
   396  00FFC2  0060  F0B0  F020   	movff	_seed+5,??_rand+5
   397  00FFC8  0060  F0B4  F021   	movff	_seed+6,??_rand+6
   398  00FFCE  0060  F0B8  F022   	movff	_seed+7,??_rand+7
   399  00FFD4  0E08               	movlw	8
   400  00FFD6  D009               	goto	u140
   401  00FFD8                     u145:
   402  00FFD8  90D8               	bcf	status,0,c
   403  00FFDA  3222               	rrcf	??_rand+7,f,c
   404  00FFDC  3221               	rrcf	??_rand+6,f,c
   405  00FFDE  3220               	rrcf	??_rand+5,f,c
   406  00FFE0  321F               	rrcf	??_rand+4,f,c
   407  00FFE2  321E               	rrcf	??_rand+3,f,c
   408  00FFE4  321D               	rrcf	??_rand+2,f,c
   409  00FFE6  321C               	rrcf	??_rand+1,f,c
   410  00FFE8  321B               	rrcf	??_rand,f,c
   411  00FFEA                     u140:
   412  00FFEA  2EE8               	decfsz	wreg,f,c
   413  00FFEC  D7F5               	goto	u145
   414  00FFEE  0060  F06C  F019   	movff	??_rand,?_rand
   415  00FFF4  0060  F074  F01A   	movff	??_rand+2,?_rand+1
   416  00FFFA  0012               	return		;funcret
   417  00FFFC                     __end_of_rand:
   418                           	opt callstack 0
   419                           
   420 ;; *************** function ___omul *****************
   421 ;; Defined at:
   422 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul64.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;  multiplier      8    0[COMRAM] unsigned long long 
   425 ;;  multiplicand    8    8[COMRAM] unsigned long long 
   426 ;; Auto vars:     Size  Location     Type
   427 ;;  product         8   16[COMRAM] unsigned long long 
   428 ;; Return value:  Size  Location     Type
   429 ;;                  8    0[COMRAM] unsigned long long 
   430 ;; Registers used:
   431 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   437 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;Total ram usage:       24 bytes
   442 ;; Hardware stack levels used:    1
   443 ;; This function calls:
   444 ;;		Nothing
   445 ;; This function is called by:
   446 ;;		_rand
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text3
   451  00FE56                     __ptext3:
   452                           	opt callstack 0
   453  00FE56                     ___omul:
   454                           	opt callstack 29
   455                           
   456                           ;incstack = 0
   457  00FE56  EE20  F011         	lfsr	2,___omul@product
   458  00FE5A  0E07               	movlw	7
   459  00FE5C                     u111:
   460  00FE5C  6ADE               	clrf	postinc2,c
   461  00FE5E  06E8               	decf	wreg,f,c
   462  00FE60  E2FD               	bc	u111
   463  00FE62                     l780:
   464  00FE62  A001               	btfss	___omul@multiplier,0,c
   465  00FE64  D010               	goto	l784
   466  00FE66  5009               	movf	___omul@multiplicand,w,c
   467  00FE68  2611               	addwf	___omul@product,f,c
   468  00FE6A  500A               	movf	___omul@multiplicand+1,w,c
   469  00FE6C  2212               	addwfc	___omul@product+1,f,c
   470  00FE6E  500B               	movf	___omul@multiplicand+2,w,c
   471  00FE70  2213               	addwfc	___omul@product+2,f,c
   472  00FE72  500C               	movf	___omul@multiplicand+3,w,c
   473  00FE74  2214               	addwfc	___omul@product+3,f,c
   474  00FE76  500D               	movf	___omul@multiplicand+4,w,c
   475  00FE78  2215               	addwfc	___omul@product+4,f,c
   476  00FE7A  500E               	movf	___omul@multiplicand+5,w,c
   477  00FE7C  2216               	addwfc	___omul@product+5,f,c
   478  00FE7E  500F               	movf	___omul@multiplicand+6,w,c
   479  00FE80  2217               	addwfc	___omul@product+6,f,c
   480  00FE82  5010               	movf	___omul@multiplicand+7,w,c
   481  00FE84  2218               	addwfc	___omul@product+7,f,c
   482  00FE86                     l784:
   483  00FE86  90D8               	bcf	status,0,c
   484  00FE88  3609               	rlcf	___omul@multiplicand,f,c
   485  00FE8A  360A               	rlcf	___omul@multiplicand+1,f,c
   486  00FE8C  360B               	rlcf	___omul@multiplicand+2,f,c
   487  00FE8E  360C               	rlcf	___omul@multiplicand+3,f,c
   488  00FE90  360D               	rlcf	___omul@multiplicand+4,f,c
   489  00FE92  360E               	rlcf	___omul@multiplicand+5,f,c
   490  00FE94  360F               	rlcf	___omul@multiplicand+6,f,c
   491  00FE96  3610               	rlcf	___omul@multiplicand+7,f,c
   492  00FE98  90D8               	bcf	status,0,c
   493  00FE9A  3208               	rrcf	___omul@multiplier+7,f,c
   494  00FE9C  3207               	rrcf	___omul@multiplier+6,f,c
   495  00FE9E  3206               	rrcf	___omul@multiplier+5,f,c
   496  00FEA0  3205               	rrcf	___omul@multiplier+4,f,c
   497  00FEA2  3204               	rrcf	___omul@multiplier+3,f,c
   498  00FEA4  3203               	rrcf	___omul@multiplier+2,f,c
   499  00FEA6  3202               	rrcf	___omul@multiplier+1,f,c
   500  00FEA8  3201               	rrcf	___omul@multiplier,f,c
   501  00FEAA  5001               	movf	___omul@multiplier,w,c
   502  00FEAC  1002               	iorwf	___omul@multiplier+1,w,c
   503  00FEAE  1003               	iorwf	___omul@multiplier+2,w,c
   504  00FEB0  1004               	iorwf	___omul@multiplier+3,w,c
   505  00FEB2  1005               	iorwf	___omul@multiplier+4,w,c
   506  00FEB4  1006               	iorwf	___omul@multiplier+5,w,c
   507  00FEB6  1007               	iorwf	___omul@multiplier+6,w,c
   508  00FEB8  1008               	iorwf	___omul@multiplier+7,w,c
   509  00FEBA  A4D8               	btfss	status,2,c
   510  00FEBC  D7D2               	goto	l780
   511  00FEBE  0060  F044  F001   	movff	___omul@product,?___omul
   512  00FEC4  0060  F048  F002   	movff	___omul@product+1,?___omul+1
   513  00FECA  0060  F04C  F003   	movff	___omul@product+2,?___omul+2
   514  00FED0  0060  F050  F004   	movff	___omul@product+3,?___omul+3
   515  00FED6  0060  F054  F005   	movff	___omul@product+4,?___omul+4
   516  00FEDC  0060  F058  F006   	movff	___omul@product+5,?___omul+5
   517  00FEE2  0060  F05C  F007   	movff	___omul@product+6,?___omul+6
   518  00FEE8  0060  F060  F008   	movff	___omul@product+7,?___omul+7
   519  00FEEE  0012               	return		;funcret
   520  00FEF0                     __end_of___omul:
   521                           	opt callstack 0
   522                           
   523 ;; *************** function ___awdiv *****************
   524 ;; Defined at:
   525 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;  dividend        2    0[COMRAM] int 
   528 ;;  divisor         2    2[COMRAM] int 
   529 ;; Auto vars:     Size  Location     Type
   530 ;;  quotient        2    6[COMRAM] int 
   531 ;;  sign            1    5[COMRAM] unsigned char 
   532 ;;  counter         1    4[COMRAM] unsigned char 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  2    0[COMRAM] int 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;Total ram usage:        8 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_main
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text4
   556  00FDCE                     __ptext4:
   557                           	opt callstack 0
   558  00FDCE                     ___awdiv:
   559                           	opt callstack 30
   560                           
   561                           ;incstack = 0
   562  00FDCE  0E00               	movlw	0
   563  00FDD0  6E06               	movwf	___awdiv@sign,c
   564  00FDD2  AE04               	btfss	___awdiv@divisor+1,7,c
   565  00FDD4  D006               	goto	l804
   566  00FDD6  6C03               	negf	___awdiv@divisor,c
   567  00FDD8  1E04               	comf	___awdiv@divisor+1,f,c
   568  00FDDA  B0D8               	btfsc	status,0,c
   569  00FDDC  2A04               	incf	___awdiv@divisor+1,f,c
   570  00FDDE  0E01               	movlw	1
   571  00FDE0  6E06               	movwf	___awdiv@sign,c
   572  00FDE2                     l804:
   573  00FDE2  AE02               	btfss	___awdiv@dividend+1,7,c
   574  00FDE4  D006               	goto	l810
   575  00FDE6  6C01               	negf	___awdiv@dividend,c
   576  00FDE8  1E02               	comf	___awdiv@dividend+1,f,c
   577  00FDEA  B0D8               	btfsc	status,0,c
   578  00FDEC  2A02               	incf	___awdiv@dividend+1,f,c
   579  00FDEE  0E01               	movlw	1
   580  00FDF0  1A06               	xorwf	___awdiv@sign,f,c
   581  00FDF2                     l810:
   582  00FDF2  0E00               	movlw	0
   583  00FDF4  6E08               	movwf	___awdiv@quotient+1,c
   584  00FDF6  0E00               	movlw	0
   585  00FDF8  6E07               	movwf	___awdiv@quotient,c
   586  00FDFA  5003               	movf	___awdiv@divisor,w,c
   587  00FDFC  1004               	iorwf	___awdiv@divisor+1,w,c
   588  00FDFE  B4D8               	btfsc	status,2,c
   589  00FE00  D01C               	goto	l832
   590  00FE02  0E01               	movlw	1
   591  00FE04  6E05               	movwf	___awdiv@counter,c
   592  00FE06  D004               	goto	l818
   593  00FE08                     l816:
   594  00FE08  90D8               	bcf	status,0,c
   595  00FE0A  3603               	rlcf	___awdiv@divisor,f,c
   596  00FE0C  3604               	rlcf	___awdiv@divisor+1,f,c
   597  00FE0E  2A05               	incf	___awdiv@counter,f,c
   598  00FE10                     l818:
   599  00FE10  AE04               	btfss	___awdiv@divisor+1,7,c
   600  00FE12  D7FA               	goto	l816
   601  00FE14                     u180:
   602  00FE14  90D8               	bcf	status,0,c
   603  00FE16  3607               	rlcf	___awdiv@quotient,f,c
   604  00FE18  3608               	rlcf	___awdiv@quotient+1,f,c
   605  00FE1A  5003               	movf	___awdiv@divisor,w,c
   606  00FE1C  5C01               	subwf	___awdiv@dividend,w,c
   607  00FE1E  5004               	movf	___awdiv@divisor+1,w,c
   608  00FE20  5802               	subwfb	___awdiv@dividend+1,w,c
   609  00FE22  A0D8               	btfss	status,0,c
   610  00FE24  D005               	goto	l828
   611  00FE26  5003               	movf	___awdiv@divisor,w,c
   612  00FE28  5E01               	subwf	___awdiv@dividend,f,c
   613  00FE2A  5004               	movf	___awdiv@divisor+1,w,c
   614  00FE2C  5A02               	subwfb	___awdiv@dividend+1,f,c
   615  00FE2E  8007               	bsf	___awdiv@quotient,0,c
   616  00FE30                     l828:
   617  00FE30  90D8               	bcf	status,0,c
   618  00FE32  3204               	rrcf	___awdiv@divisor+1,f,c
   619  00FE34  3203               	rrcf	___awdiv@divisor,f,c
   620  00FE36  2E05               	decfsz	___awdiv@counter,f,c
   621  00FE38  D7ED               	goto	u180
   622  00FE3A                     l832:
   623  00FE3A  5006               	movf	___awdiv@sign,w,c
   624  00FE3C  B4D8               	btfsc	status,2,c
   625  00FE3E  D004               	goto	l836
   626  00FE40  6C07               	negf	___awdiv@quotient,c
   627  00FE42  1E08               	comf	___awdiv@quotient+1,f,c
   628  00FE44  B0D8               	btfsc	status,0,c
   629  00FE46  2A08               	incf	___awdiv@quotient+1,f,c
   630  00FE48                     l836:
   631  00FE48  0060  F01C  F001   	movff	___awdiv@quotient,?___awdiv
   632  00FE4E  0060  F020  F002   	movff	___awdiv@quotient+1,?___awdiv+1
   633  00FE54  0012               	return		;funcret
   634  00FE56                     __end_of___awdiv:
   635                           	opt callstack 0
   636  0000                     
   637                           	psect	rparam
   638  0000                     tosu	equ	0x3FFF
   639                           tosh	equ	0x3FFE
   640                           tosl	equ	0x3FFD
   641                           stkptr	equ	0x3FFC
   642                           pclatu	equ	0x3FFB
   643                           pclath	equ	0x3FFA
   644                           pcl	equ	0x3FF9
   645                           tblptru	equ	0x3FF8
   646                           tblptrh	equ	0x3FF7
   647                           tblptrl	equ	0x3FF6
   648                           tablat	equ	0x3FF5
   649                           prodh	equ	0x3FF4
   650                           prodl	equ	0x3FF3
   651                           indf0	equ	0x3FEF
   652                           postinc0	equ	0x3FEE
   653                           postdec0	equ	0x3FED
   654                           preinc0	equ	0x3FEC
   655                           plusw0	equ	0x3FEB
   656                           fsr0h	equ	0x3FEA
   657                           fsr0l	equ	0x3FE9
   658                           wreg	equ	0x3FE8
   659                           indf1	equ	0x3FE7
   660                           postinc1	equ	0x3FE6
   661                           postdec1	equ	0x3FE5
   662                           preinc1	equ	0x3FE4
   663                           plusw1	equ	0x3FE3
   664                           fsr1h	equ	0x3FE2
   665                           fsr1l	equ	0x3FE1
   666                           bsr	equ	0x3FE0
   667                           indf2	equ	0x3FDF
   668                           postinc2	equ	0x3FDE
   669                           postdec2	equ	0x3FDD
   670                           preinc2	equ	0x3FDC
   671                           plusw2	equ	0x3FDB
   672                           fsr2h	equ	0x3FDA
   673                           fsr2l	equ	0x3FD9
   674                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      46
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_rand
    _rand->___omul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     966
                                             34 COMRAM     4     4      0
                            ___awdiv
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (1) _srand                                                6     4      2      98
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _rand                                                10     8      2     370
                                             24 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (2) ___omul                                              24     8     16     370
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _rand
     ___omul
   _srand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     26      2E       1       48.4%
STACK                0      0       0       2        0.0%
DATA                 0      0      2E       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BANK10             100      0       0      24        0.0%
BANK11             100      0       0      25        0.0%
BANK12             100      0       0      26        0.0%
BANK13             100      0       0      27        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
ABS                  0      0      2E      32        0.0%
BITBANK10          100      0       0      33        0.0%
BITBANK11          100      0       0      34        0.0%
BITBANK12          100      0       0      35        0.0%
BITBANK13          100      0       0      36        0.0%
BIGRAM             FFF      0       0      37        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Nov 09 08:11:30 2019

            __CFG_CP$OFF 000000             ___awdiv@sign 0006              __CFG_LVP$ON 000000  
                    l810 FDF2                      l804 FDE2                      l816 FE08  
                    l832 FE3A                      l818 FE10                      l836 FE48  
                    l828 FE30                      l780 FE62                      l844 FD7C  
                    l784 FE86                      u111 FE5C                      u140 FFEA  
                    u145 FFD8                      u217 FDC0                      u180 FE14  
                    wreg 003FE8            __CFG_BBEN$OFF 000000             __CFG_ZCD$OFF 000000  
                   _main FD66                     _rand FEF0                     _seed 0027  
                   start FFFC            __CFG_CSWEN$ON 000000             ___param_bank 000000  
                  ?_main 0001                    ?_rand 0019          __end_of___awdiv FE56  
          __CFG_WDTE$OFF 000000          ___awdiv@divisor 0003           __CFG_DEBUG$OFF 000000  
        ___awdiv@counter 0005                    _PORTB 003FCB                    _TRISB 003FC3  
         __CFG_FCMEN$OFF 000000             main@rand_num 0025            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000       __CFG_MCLRE$EXTMCLR 000000  
                  _srand FD30                    status 003FD8          __initialization FD2A  
           __end_of_main FDCE             __end_of_rand FFFC           __CFG_SAFEN$OFF 000000  
                 ??_main 0023                   ??_rand 001B           __CFG_PR1WAY$ON 000000  
          __activetblptr 000000         ___awdiv@dividend 0001                   ?_srand 0001  
                 _ANSELB 003A50           __CFG_WDTCCS$SC 000000       __CFG_RSTOSC$EXTOSC 000000  
         __CFG_XINST$OFF 000000                   ___omul FE56                ??___awdiv 0005  
         __CFG_STVREN$ON 000000         ___awdiv@quotient 0007                   srand@s 0001  
             __accesstop 0060  __end_of__initialization FD2A          __CFG_FEXTOSC$HS 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_srand FD66  
        __CFG_IVT1WAY$ON 000000                  ??_srand 0003          __CFG_MVECEN$OFF 000000  
             __pnvCOMRAM 0027                  ?___omul 0001          __CFG_PPS1WAY$ON 000000  
    ___omul@multiplicand 0009      __CFG_PWRTS$PWRT_OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___awdiv FDCE          __size_of___omul 009A  
                __pcinit FD2A                  __ramtop 1000                  __ptext0 FD66  
                __ptext1 FD30                  __ptext2 FEF0                  __ptext3 FE56  
                __ptext4 FDCE          __CFG_WRTAPP$OFF 000000          __CFG_WRTSAF$OFF 000000  
   end_of_initialization FD2A           ___omul@product 0011                  postinc2 003FDE  
  __CFG_WDTCPS$WDTCPS_31 000000           __end_of___omul FEF0      start_initialization FD2A  
      ___omul@multiplier 0001         __CFG_LPBOREN$OFF 000000                 ??___omul 0011  
               ?___awdiv 0001   __CFG_BBSIZE$BBSIZE_512 000000           __size_of_srand 0036  
    __CFG_BORV$VBOR_2P45 000000                 __Hrparam 0000                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000         __size_of___awdiv 0088            __size_of_main 0068  
          __size_of_rand 010C     __CFG_WDTCWS$WDTCWS_7 000000        __CFG_CLKOUTEN$OFF 000000  
